// Code generated by "stringer -type=EventType"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EventNone-0]
	_ = x[EventBatch-1]
	_ = x[EventFrequency-2]
	_ = x[EventStack-3]
	_ = x[EventGomaxprocs-4]
	_ = x[EventProcStart-5]
	_ = x[EventProcStop-6]
	_ = x[EventGCStart-7]
	_ = x[EventGCDone-8]
	_ = x[EventGCSTWStart-9]
	_ = x[EventGCSTWDone-10]
	_ = x[EventGCSweepStart-11]
	_ = x[EventGCSweepDone-12]
	_ = x[EventGoCreate-13]
	_ = x[EventGoStart-14]
	_ = x[EventGoEnd-15]
	_ = x[EventGoStop-16]
	_ = x[EventGoSched-17]
	_ = x[EventGoPreempt-18]
	_ = x[EventGoSleep-19]
	_ = x[EventGoBlock-20]
	_ = x[EventGoUnblock-21]
	_ = x[EventGoBlockSend-22]
	_ = x[EventGoBlockRecv-23]
	_ = x[EventGoBlockSelect-24]
	_ = x[EventGoBlockSync-25]
	_ = x[EventGoBlockCond-26]
	_ = x[EventGoBlockNet-27]
	_ = x[EventGoSysCall-28]
	_ = x[EventGoSysExit-29]
	_ = x[EventGoSysBlock-30]
	_ = x[EventGoWaiting-31]
	_ = x[EventGoInSyscall-32]
	_ = x[EventHeapAlloc-33]
	_ = x[EventHeapGoal-34]
	_ = x[EventTimerGoroutine-35]
	_ = x[EventFutileWakeup-36]
	_ = x[EventString-37]
	_ = x[EventGoStartLocal-38]
	_ = x[EventGoUnblockLocal-39]
	_ = x[EventGoSysExitLocal-40]
	_ = x[EventGoStartLabel-41]
	_ = x[EventGoBlockGC-42]
	_ = x[EventGCMarkAssistStart-43]
	_ = x[EventGCMarkAssistDone-44]
	_ = x[EventUserTaskCreate-45]
	_ = x[EventUserTaskEnd-46]
	_ = x[EventUserRegion-47]
	_ = x[EventUserLog-48]
	_ = x[EventCPUSample-49]
	_ = x[EventCount-50]
}

const _EventType_name = "EventNoneEventBatchEventFrequencyEventStackEventGomaxprocsEventProcStartEventProcStopEventGCStartEventGCDoneEventGCSTWStartEventGCSTWDoneEventGCSweepStartEventGCSweepDoneEventGoCreateEventGoStartEventGoEndEventGoStopEventGoSchedEventGoPreemptEventGoSleepEventGoBlockEventGoUnblockEventGoBlockSendEventGoBlockRecvEventGoBlockSelectEventGoBlockSyncEventGoBlockCondEventGoBlockNetEventGoSysCallEventGoSysExitEventGoSysBlockEventGoWaitingEventGoInSyscallEventHeapAllocEventHeapGoalEventTimerGoroutineEventFutileWakeupEventStringEventGoStartLocalEventGoUnblockLocalEventGoSysExitLocalEventGoStartLabelEventGoBlockGCEventGCMarkAssistStartEventGCMarkAssistDoneEventUserTaskCreateEventUserTaskEndEventUserRegionEventUserLogEventCPUSampleEventCount"

var _EventType_index = [...]uint16{0, 9, 19, 33, 43, 58, 72, 85, 97, 108, 123, 137, 154, 170, 183, 195, 205, 216, 228, 242, 254, 266, 280, 296, 312, 330, 346, 362, 377, 391, 405, 420, 434, 450, 464, 477, 496, 513, 524, 541, 560, 579, 596, 610, 632, 653, 672, 688, 703, 715, 729, 739}

func (i EventType) String() string {
	if i >= EventType(len(_EventType_index)-1) {
		return "EventType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EventType_name[_EventType_index[i]:_EventType_index[i+1]]
}
